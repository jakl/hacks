#!/usr/bin/ruby
require 'optparse'
require 'csv'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: exploitdb.rb [options]"

  opts.on("--file FILE", String, "The file path on exploit-db") do |x|
    options[:file] = x
  end
  opts.on("--description DESCRIPTION", String, "Brief summary of the vuln and bypass") do |x|
    options[:description] = x
  end
  opts.on("--date DATE", String, "The date in YYYY-MM-DD format") do |x|
    options[:date] = x
  end
  opts.on("--author AUTHOR", String, "The screen name or real name of the hacker") do |x|
    options[:author] = x
  end
  opts.on("--platform PLATFORM", String, "The target operating system: windows, linux, solaris, etc...") do |x|
    options[:platform] = x
  end
  opts.on("--type TYPE", String, "The type: remote, local, dos, etc...") do |x|
    options[:type] = x
  end
  opts.on("--port PORT", String, "The port of the vulnerable service, or 0 if not applicable") do |x|
    options[:port] = x
  end
  opts.on("--csv CSV", String, "The csv file listing all exploits from exploit-db") do |x|
    options[:csv] = x
  end
  opts.on("--fix", "Fix the csv file to escape quotes properly") do |x|
    options[:fix] = x
  end
end.parse!

csv = options.delete(:csv) || 'exploitdb.csv'

unless File.exists? csv
  !`which svn`.empty? or raise 'apt-get install subversion'
  `svn export svn://svn.exploit-db.com/exploitdb/files.csv exploitdb.csv`
end

if options[:fix]
  bad_csv = File.read csv, encoding: 'windows-1251:utf-8'
  File.open(csv, 'w') do |f|
    f.write bad_csv.gsub('\\"', '""')
  end
  options.delete :fix
end

CSV.foreach csv, headers: true do |row|
  match = true
  options.each do |option, value|
    match = false unless row[option.to_s].match value
  end
  puts row.to_s if match
end
