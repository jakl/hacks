#!/usr/bin/ruby
require 'optparse'
require 'csv'

queries = {}
options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: exploitdb.rb [options]"

  opts.on "--file FILE"                                             do |x| queries[:file] = x end
  opts.on "--description DESCRIPTION"                               do |x| queries[:description] = x end
  opts.on "--date DATE", "YYYY-MM-DD"                               do |x| queries[:date] = x end
  opts.on "--author AUTHOR"                                         do |x| queries[:author] = x end
  opts.on "--platform PLATFORM", "Operation system: windows, linux" do |x| queries[:platform] = x end
  opts.on "--type TYPE", "remote, local, dos, etc..."               do |x| queries[:type] = x end
  opts.on "--port PORT"                                             do |x| queries[:port] = x end

  opts.on "--csv CSV", "Provide a predownloaded csv file"           do |x| options[:csv] = x end
  opts.on "--fix", "Run Once! Fix the csv file, if erroring"        do |x| options[:fix] = x end
  opts.on "--download", "Download last match"                       do |x| options[:download] = x end
end.parse!

raise 'Use --help to view help' if queries.empty?

csv = options[:csv] || 'exploitdb.csv'

unless File.exists? csv
  !`which svn`.empty? or raise 'apt-get install subversion'
  `svn export svn://svn.exploit-db.com/exploitdb/files.csv exploitdb.csv`
end

if options[:fix]
  bad_csv = File.read csv, encoding: 'windows-1251:utf-8'
  File.open(csv, 'w') do |f|
    f.write bad_csv.gsub('\\"', '""')
  end
end

download = false

CSV.foreach csv, headers: true do |row|
  is_match = true
  queries.each do |option, value|
    next unless row[option.to_s]
    is_match = false unless row[option.to_s].match value
  end

  if is_match
    puts row.to_s
    download = row['file'] if options[:download]
  end
end

if options[:download] and download
  puts "Downloading #{download.sub /.*\//, ''}"
  `svn export svn://svn.exploit-db.com/exploitdb/#{download}`
end
